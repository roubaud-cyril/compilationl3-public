/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AParenthesageExpr6 extends PExpr6
{
    private TLp _lp_;
    private PExpr99 _expr99_;
    private TRp _rp_;

    public AParenthesageExpr6()
    {
        // Constructor
    }

    public AParenthesageExpr6(
        @SuppressWarnings("hiding") TLp _lp_,
        @SuppressWarnings("hiding") PExpr99 _expr99_,
        @SuppressWarnings("hiding") TRp _rp_)
    {
        // Constructor
        setLp(_lp_);

        setExpr99(_expr99_);

        setRp(_rp_);

    }

    @Override
    public Object clone()
    {
        return new AParenthesageExpr6(
            cloneNode(this._lp_),
            cloneNode(this._expr99_),
            cloneNode(this._rp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParenthesageExpr6(this);
    }

    public TLp getLp()
    {
        return this._lp_;
    }

    public void setLp(TLp node)
    {
        if(this._lp_ != null)
        {
            this._lp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lp_ = node;
    }

    public PExpr99 getExpr99()
    {
        return this._expr99_;
    }

    public void setExpr99(PExpr99 node)
    {
        if(this._expr99_ != null)
        {
            this._expr99_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr99_ = node;
    }

    public TRp getRp()
    {
        return this._rp_;
    }

    public void setRp(TRp node)
    {
        if(this._rp_ != null)
        {
            this._rp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lp_)
            + toString(this._expr99_)
            + toString(this._rp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lp_ == child)
        {
            this._lp_ = null;
            return;
        }

        if(this._expr99_ == child)
        {
            this._expr99_ = null;
            return;
        }

        if(this._rp_ == child)
        {
            this._rp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lp_ == oldChild)
        {
            setLp((TLp) newChild);
            return;
        }

        if(this._expr99_ == oldChild)
        {
            setExpr99((PExpr99) newChild);
            return;
        }

        if(this._rp_ == oldChild)
        {
            setRp((TRp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
