/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ADefonction3 extends PDefonction3
{
    private PBlocfonc _blocfonc_;

    public ADefonction3()
    {
        // Constructor
    }

    public ADefonction3(
        @SuppressWarnings("hiding") PBlocfonc _blocfonc_)
    {
        // Constructor
        setBlocfonc(_blocfonc_);

    }

    @Override
    public Object clone()
    {
        return new ADefonction3(
            cloneNode(this._blocfonc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADefonction3(this);
    }

    public PBlocfonc getBlocfonc()
    {
        return this._blocfonc_;
    }

    public void setBlocfonc(PBlocfonc node)
    {
        if(this._blocfonc_ != null)
        {
            this._blocfonc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blocfonc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._blocfonc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._blocfonc_ == child)
        {
            this._blocfonc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._blocfonc_ == oldChild)
        {
            setBlocfonc((PBlocfonc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
