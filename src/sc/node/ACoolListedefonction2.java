/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ACoolListedefonction2 extends PListedefonction2
{
    private PDefonction _defonction_;
    private PListedefonction2 _listedefonction2_;

    public ACoolListedefonction2()
    {
        // Constructor
    }

    public ACoolListedefonction2(
        @SuppressWarnings("hiding") PDefonction _defonction_,
        @SuppressWarnings("hiding") PListedefonction2 _listedefonction2_)
    {
        // Constructor
        setDefonction(_defonction_);

        setListedefonction2(_listedefonction2_);

    }

    @Override
    public Object clone()
    {
        return new ACoolListedefonction2(
            cloneNode(this._defonction_),
            cloneNode(this._listedefonction2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACoolListedefonction2(this);
    }

    public PDefonction getDefonction()
    {
        return this._defonction_;
    }

    public void setDefonction(PDefonction node)
    {
        if(this._defonction_ != null)
        {
            this._defonction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._defonction_ = node;
    }

    public PListedefonction2 getListedefonction2()
    {
        return this._listedefonction2_;
    }

    public void setListedefonction2(PListedefonction2 node)
    {
        if(this._listedefonction2_ != null)
        {
            this._listedefonction2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listedefonction2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._defonction_)
            + toString(this._listedefonction2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._defonction_ == child)
        {
            this._defonction_ = null;
            return;
        }

        if(this._listedefonction2_ == child)
        {
            this._listedefonction2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._defonction_ == oldChild)
        {
            setDefonction((PDefonction) newChild);
            return;
        }

        if(this._listedefonction2_ == oldChild)
        {
            setListedefonction2((PListedefonction2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
